:root {
    --knob-size: 20px;
}
/* material switch themed checkbox */
.hidden { display: none; }

/* 'background pill-shaped part of switch 
 * also note behavior of border-radius: when just one is supplied
 * then it stops rounding off after the smaller of width or height is completely circular
 * so here, all values >= 36px are equivalent
 */
.lbl {
    position: relative;
    /* display: block; */
    margin: auto; /* horizontally align center */
    width: 36px;
    height: 16px;
    background: #FDAA48;
    border-radius: 36px;
    cursor: pointer;
    transition: all 0.33s ease;
}

/* 
 * round part of switch 
 * note that since 'after' is a pseudo-element, not a pseudo-class (like :hover, :visited),
 * it should be preceded with two colons, ::after (CSS3) though browers will accept :after for
 * backwards compatibility
 */
.lbl::after {
    position: absolute;
    left: -2px;
    top: -1px;
    display: block;
    width: var(--knob-size);
    height: var(--knob-size);
    border-radius: var(--knob-size);
    background: #5E3B07;
    box-shadow: 0px 3px 3px rgba(128,0,38,0.05);
    content: '';
    transition: all 0.33s ease;
}

/* squish effect */
.lbl:active::after { transform: scale(1.15, 0.85); }

/* ~ is the 'general sibling combinator' so a label following a .cbx:checked 
    which creates the need to put the <label> after the <input>
*/
.cbx:checked ~ label { background: #1FA187; }
.cbx:checked ~ label::after {
    left: 20px;
    background: #3F4889;
}

.cbx:disabled ~ label {
    background: #d5d5d5;
    pointer-events: none;
}

/* x button */
.dismiss {
    padding: 0.33rem 0.5rem;
    margin: 0;
    margin-left: 1rem;
    border: none;
    color: blanchedalmond;
    /* display: inline; */
    float: right;
}

/* the span with the title for query control panel;
    needs to have a fixed min. width so that different categories'
    names align evenly */
.cboxlab {
    font-size: 1.75rem;
    padding-right: 1rem;
    padding-top: 0.33rem; /* match button */
    display:inline-block;
    min-width: 8rem; 
    vertical-align: middle;
}

.cboxlab:hover {
    cursor: pointer;
}